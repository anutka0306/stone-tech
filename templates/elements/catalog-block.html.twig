{#{{ dump(path) }}#}
<h2>{{ cardTitle }} ЦЕНЫ:</h2>
<div id="catalog-block__wrapper">
    <div class="row">
    <div class="col-md-2 col-sm-12">
        <div class="filters_wrapper">
            <div class="clear-filter" {% if activeColor is null %} style="display: none" {% endif %}>
                <a href="/{{ path }}#catalog-anchor" class="mbtn">Сбросить фильтры</a>
            </div>
            {% if categoryChildren is not empty %}
                <div class="sub-sections-filter">
                    <div class="sub-sections-header">
                        Выбрать материал:
                    </div>
                    <div class="sub-sections-filter_body">
                    {% for child in categoryChildren %}
                        <a href="/{{ child.path }}#catalog-anchor">
                            {{ child.name }}
                        </a>
                    {% endfor %}
                    </div>
                </div>
            {% endif %}
            <div class="color-filter">
                <div class="color-header">
                    Выбрать цвет:
                </div>
                <div class="color-filter_body">

                    {% for color in colors %}
                        <a href="/{{ path }}color/{{ color.slug }}#catalog-anchor" title="{{ color.name }}" data-color="{{ color.slug }}" data-category ="{{ category }}" class="color-filter__item {% if color.id == activeColor %} active-color {% endif %}" style="background-color: {{ color.code }}"></a>
                {% endfor %}
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-9 col-sm-12">
        <div class="product-sort">
            <form>
                <div class="form-group">
                    <select class="form-control" id="sortSelect">
                        <option selected disabled value="no">Сортировка</option>
                        <option value="ASC">По возрастанию цены</option>
                        <option value="DESC">По убыванию цены</option>
                    </select>
                </div>
            </form>
        </div>
        <div class="products-navigation__wrapper">
            <div class="products">
                {% for product in pagination %}
                    <div class="product">
                        <a href="/{{ product.path }}#product-card">
                            <img src="/uploads/products/{{ product.image }}" alt="{{ product.name }}">
                        </a>
                        <div class="product__name">
                            <a href="/{{ product.path }}#product-card">
                                {{ product.name }}
                            </a>
                        </div>
                        <div class="product__price">от {{ product.price}} {{ product.measure.name }}</div>
                        <button class="popup-button raschet">Рассчитать</button>
                        <button class="popup-button raschet">Консультация</button>
                    </div>
                {% endfor %}
            </div>

            <div class="navigation">
                {{ knp_pagination_render(pagination) }}
            </div>

        </div>
        {% if app.request.get('page') %}
            <a href="#" id="show_more" data-start="{{ app.request.get('page') }}" data-page="{{ app.request.get('page') }}">Показать ещё...</a>
        {% else %}
            <a href="#" id="show_more" data-start="1" data-page="1">Показать ещё...</a>
        {% endif %}
    </div>
</div>
</div>


<script>
    $( document ).ready(function() {
        let color = 0;
        let category = 0;
        let sort = 'ASC';

        if($(".pagination").length == 0){
            $("#show_more").css('display','none');
        }
        if($(".pagination span").last().hasClass('current')){
            $("#show_more").css('display','none');
        }


        $("#show_more").click(
            function (event){
               event.preventDefault();
                let page = $("#show_more").data("page");
                let start = $("#show_more").data("start");
                sort = $("#sortSelect").val();
                if(!sort){
                    sort = 'ASC';
                }
                showMore(page, start, sort);
            }
        );


      $("#sortSelect").change(
          function (event) {
               sort = $(this).val();
               $("#sortSelect option").attr('selected', false);
               $("#sortSelect option[value='"+sort+"']").attr('selected',true);
               category = $('.color-filter__item:first').data('category');
               color = $('.active-color').data('color');
              showAjaxLoader();
               showBySort(color, category, sort);
          }
      );

    });

    function showAjaxLoader() {
        $(".products").append('<div class="ajax_overlay" style="background-color: rgb(255, 255, 255); opacity: 0.7; width: 100%; height: 100%; position: absolute; top: 0px; left: 0px; z-index: 99999;"><div class="ajax_loader"></div></div>');
    }

    function showMore($curPage, $startPage, $sort){
        $.ajax({
            url: window.location.pathname,
            type: 'POST',
            dataType:'html',
            data:{
                'page': $curPage,
                'startPage': $startPage,
                'sort': $sort,
                'ajax': 1,
            },
            success: function (response) {
                $(".products-navigation__wrapper").html(response);
                let new_page = $("#show_more").data("page")+1;
                $("#show_more").data("page", $("#show_more").data("page")+1);
                if($(".pagination").length == 0){
                    $("#show_more").css('display','none');
                }
                if($(".pagination span").last().hasClass('current')){
                    $("#show_more").css('display','none');
                }

            },
            error: function (response) {
                console.log('Error');
            }
        })
    }

    function showBySort(color, category, sort) {
        console.log(color);
        console.log(category);
        console.log(sort);
        $.ajax({
            url: window.location.pathname,
            type: 'POST',
            dataType:'html',
            data:{
                'sort': sort,
                'ajax': 1,
                'color': color,
            },

            success: function (response) {
                $(".products-navigation__wrapper").html(response);
            },
            error: function (response) {
                console.log('Error');
            }
        });
    }



    function getAllUrlParams(url) {

        // извлекаем строку из URL или объекта window
        var queryString = url ? url.split('?')[1] : window.location.search.slice(1);

        // объект для хранения параметров
        var obj = {};

        // если есть строка запроса
        if (queryString) {

            // данные после знака # будут опущены
            queryString = queryString.split('#')[0];

            // разделяем параметры
            var arr = queryString.split('&');

            for (var i=0; i<arr.length; i++) {
                // разделяем параметр на ключ => значение
                var a = arr[i].split('=');

                // обработка данных вида: list[]=thing1&list[]=thing2
                var paramNum = undefined;
                var paramName = a[0].replace(/\[\d*\]/, function(v) {
                    paramNum = v.slice(1,-1);
                    return '';
                });

                // передача значения параметра ('true' если значение не задано)
                var paramValue = typeof(a[1])==='undefined' ? true : a[1];

                // преобразование регистра
                paramName = paramName.toLowerCase();
                paramValue = paramValue.toLowerCase();

                // если ключ параметра уже задан
                if (obj[paramName]) {
                    // преобразуем текущее значение в массив
                    if (typeof obj[paramName] === 'string') {
                        obj[paramName] = [obj[paramName]];
                    }
                    // если не задан индекс...
                    if (typeof paramNum === 'undefined') {
                        // помещаем значение в конец массива
                        obj[paramName].push(paramValue);
                    }
                    // если индекс задан...
                    else {
                        // размещаем элемент по заданному индексу
                        obj[paramName][paramNum] = paramValue;
                    }
                }
                // если параметр не задан, делаем это вручную
                else {
                    obj[paramName] = paramValue;
                }
            }
        }

        return obj;
    }

</script>